#functions
start_audit <- function() { #initialize (reset) the node counter to zero
audit <- new.env()
audit$node <- 0
return(audit)
}
a_ <- function(x, f, ...) { #main functionality is captured with a_
audit$node <<- audit$node + 1
audit[[as.character(audit$node)]] <- x
x %>% f(...)
}
audit_trail <- function(audit, ...) { #used after your analysis chain
print("Audit")
if (missing(...)) {
print(paste0("node: ", i))
print(audit[[as.character(i)]])
} else {
audit_trail(...)
}
}
#Employ an auditing object
start_audit() -> audit #This is the audit object
i
start_audit() -> audit #This is the audit object
iris
iris %>%
a_(mutate, Sepal.Area = Sepal.Width * Sepal.Length)
#power packages
library(dplyr)
library(magrittr)
library(tidyr)
iris %>%
mutate(Sepal.Area = Sepal.Width * Sepal.Length) %>%
mutate(Petal.Area = Petal.Width * Petal.Length) %>%
filter(Sepal.Area > mean(Sepal.Area)) %>%
select(-Petal.Length, -Sepal.Length) %>%
group_by(Species) %>%
summarize(n()) -> iris2
print(iris2)
iris %>%
mutate(Sepal.Area = Sepal.Width * Sepal.Length) %>%
assign(x="x1",value=., pos=1) %>%
mutate(Petal.Area = Petal.Width * Petal.Length) %>%
assign(x="x2",value=., pos=1) %>%
filter(Sepal.Area > mean(Sepal.Area)) %>%
assign(x="x3",value=., pos=1) %>%
select(-Petal.Length, -Sepal.Length) %>%
assign(x="x4",value=., pos=1) %>%
group_by(Species) %>%
assign(x="x5",value=., pos=1) %>%
summarize(n()) -> iris2
print(x1)
iris %>%
a_(mutate, Sepal.Area = Sepal.Width * Sepal.Length)
iris %>%
a_(mutate, Sepal.Area = Sepal.Width * Sepal.Length) %>%
a_(mutate, Petal.Area = Petal.Width * Petal.Length)
iris %>%
a_(mutate, Sepal.Area = Sepal.Width * Sepal.Length) %>%
a_(mutate, Petal.Area = Petal.Width * Petal.Length) %>%
a_(filter, Sepal.Area > mean(Sepal.Area))
iris %>%
a_(mutate, Sepal.Area = Sepal.Width * Sepal.Length) %>%
a_(mutate, Petal.Area = Petal.Width * Petal.Length) %>%
a_(filter, Sepal.Area > mean(Sepal.Area)) %>%
a_(select, -Petal.Length, -Sepal.Length)
iris %>%
a_(mutate, Sepal.Area = Sepal.Width * Sepal.Length) %>%
a_(mutate, Petal.Area = Petal.Width * Petal.Length) %>%
a_(filter, Sepal.Area > mean(Sepal.Area)) %>%
a_(select, -Petal.Length, -Sepal.Length) %>%
a_(group_by, Species)
iris %>%
a_(mutate, Sepal.Area = Sepal.Width * Sepal.Length) %>%
a_(mutate, Petal.Area = Petal.Width * Petal.Length) %>%
a_(filter, Sepal.Area > mean(Sepal.Area)) %>%
a_(select, -Petal.Length, -Sepal.Length) %>%
a_(group_by, Species) %>%
a_(summarize, n() )
iris %>%
a_(mutate, Sepal.Area = Sepal.Width * Sepal.Length) %>%
a_(mutate, Petal.Area = Petal.Width * Petal.Length) %>%
a_(filter, Sepal.Area > mean(Sepal.Area)) %>%
a_(select, -Petal.Length, -Sepal.Length) %>%
a_(group_by, Species) %>%
a_(summarize, n() ) -> iris2
audit %>% audit_trail(2,3)
audit
audit[[1]]
audit[1]
str(audit)
audit
ls(audit)
start_audit() -> audit #This is the audit object
ls(audit)
iris %>%
a_(mutate, Sepal.Area = Sepal.Width * Sepal.Length)
ls(audit)
audit[["1"]]
ls(audit)
?ls
ls(audit, pattern="node")
ls(audit, pattern!="node")
ls(audit, pattern=!"node")
ls(audit, pattern=^"node")
ls(audit, pattern=[^node])
ls(audit, pattern="[^node]")
audit_trail <- function(audit, ...) { #used after your analysis chain
print("Audit")
if (missing(...)) {
audit_trail(audit, seq_along(ls(audit, pattern="[^node]")))
}
} else {
print(ls(audit))
}
}
audit_trail <- function(audit, ...) { #used after your analysis chain
print("Audit")
if (missing(...)) {
audit_trail(audit, seq_along(ls(audit, pattern="[^node]")))
} else {
print(ls(audit))
}
}
audit_trail(audit)
seq_along(ls(audit))
seq(ls(audit))
audit[[1]]
audit
ls(audit)
audit[[as.character(1)]]
audit_trail <- function(audit, ...) { #used after your analysis chain
print("Audit")
if (missing(...)) {
audit_trail(audit, seq_along(ls(audit, pattern="[^node]")))
} else {
for (i in seq_along(...)) {
print(audit[[as.character(i)]])
}
}
}
audit_trail(audit)
audit_trail <- function(audit, ...) { #used after your analysis chain
print("Audit")
if (missing(...)) {
audit_trail(audit, seq_along(ls(audit, pattern="[^node]")))
} else {
for (i in seq_along(...)) {
print(head(audit[[as.character(i)]]))
}
}
}
audit_trail(audit)
start_audit() -> audit #This is the audit object
iris %>%
a_(mutate, Sepal.Area = Sepal.Width * Sepal.Length) %>%
a_(mutate, Petal.Area = Petal.Width * Petal.Length) %>%
a_(filter, Sepal.Area > mean(Sepal.Area)) %>%
a_(select, -Petal.Length, -Sepal.Length) %>%
a_(group_by, Species) %>%
a_(summarize, n() ) -> iris2
#reveal the object at the 3rd node
audit %>% audit_trail(2,3)
seq_len(audit)
seq_len(ls(audit)
)
audit %>% audit_trail
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
audit_trail(audit, seq_along(ls(audit, pattern="[^node]")))
} else {
for (i in seq_along(...)) {
print(paste0("audit trail: ", i))
print(head(audit[[as.character(i)]]))
}
}
}
audit %>% audit_trail
audit %>% audit_trail(3)
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
audit_trail(audit, ls(audit, pattern="[^node]"))
} else {
for (i in seq_along(...)) {
print(paste0("audit trail: ", ...[i]))
print(head(audit[[as.character(...[i])]]))
}
}
}
audit %>% audit_trail(3)
audit %>% audit_trail
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
audit_trail(audit, ls(audit, pattern="[^node]"))
} else {
node_labels <- ...
for (i in seq_along(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[as.character(node_labels[i])]]))
}
}
}
audit_trail(audit)
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
audit_trail(audit, ls(audit, pattern="[^node]"))
} else {
node_labels <- as.list(substitute(list(...)))
for (i in seq_along(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[as.character(node_labels[i])]]))
}
}
}
audit_trail
audit_trail(audit)
node_labels
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
audit_trail(audit, ls(audit, pattern="[^node]"))
} else {
node_labels <- list(...)#as.list(substitute(list(...)))
for (i in seq_along(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[as.character(node_labels[i])]]))
}
}
}
audit_trail(audit)
node_labels
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
audit_trail(audit, ls(audit, pattern="[^node]"))
} else {
node_labels <- list(...)
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[as.character(node_labels[i])]]))
}
}
}
audit_trail(audit)
i
audit(ls(audit, pattern="[^node]"))
ls(audit, pattern="[^node]"))
ls(audit, pattern="[^node]")
node.labels <- list(ls(audit, pattern="[^node]")
)
node.labels
node.labels[1]
node.labels[[1]
]
node.labels[[1,1]]
node.labels[[1]][1]
node.labels[[1]][2]
node.labels[[1]][[2]
]
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
audit_trail(audit, ls(audit, pattern="[^node]"))
} else {
node_labels <- list(...)
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[[1]][i]))
print(head(audit[[as.character(node_labels[[1]][i])]]))
}
}
}
audit_trail(audit)
ls(audit)
ls(audit)
ls(audit, pattern="[^node]")
node_labels <- ls(audit, pattern="[^node]")
node_labels
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[[1]][i]))
print(head(audit[[as.character(node_labels[[1]][i])]]))
}
node_labels
node_labels[1]
node_labels[2]
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
audit_trail(audit, ls(audit, pattern="[^node]"))
} else {
node_labels <- list(...)
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[  as.character(node_labels[i])   ]] ))
}
}
}
audit_trail(audit = )
audit_trail(audit)
audit_trail(audit, 1)
audit_trail(audit, 2)
audit_trail(audit)
audit_trail(audit, list(ls(audit, pattern="[^node]")))
list(ls(audit, pattern="[^node]")))
list(ls(audit, pattern="[^node]"))
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
node_labels <- ls(audit, pattern="[^node]")
audit_trail(audit, node_labels)
} else {
node_labels <- list(...)
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[  as.character(node_labels[i])   ]] ))
}
}
}
audit
audit_trail(audit)
audit_trail(audit, 3)
audit_trail(audit, 3,2)
node_labels <- ls(audit, pattern="[^node]")
node_labels
print(paste0("audit trail: ", node_labels[i]))
print(paste0("audit trail: ", node_labels[1]))
print(paste0("audit trail: ", node_labels[2]))
node_labels
node_labels[1]
print(head(audit[[ (node_labels[i]) ]] ))
i
node_labels[i]
audit[[node_labels[i]
]]
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
node_labels <- ls(audit, pattern="[^node]")
audit_trail(audit, node_labels)
} else {
node_labels <- list(...)
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[ node_labels[i] ]] ))
}
}
}
audit
audit_trail(audit)
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
node_labels <- ls(audit, pattern="[^node]")
audit_trail(audit, node_labels)
} else {
node_labels <- list(...)
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[ (node_labels[i]) ]] ))
}
}
}
audit_trail(audit )
audit[[node_labels[1]]]
print(head(audit[[node_labels[i]]] ))
print(paste0("audit trail: ", node_labels[i]))
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[node_labels[i]]] ))
audit_trail <- function(audit, ...) { #used after your analysis chain
if (missing(...)) {
node_labels <- ls(audit, pattern="[^node]")
audit_trail(audit, node_labels)
} else {
node_labels <- list(...)
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[node_labels[i]]] ))
}
}
}
audit_trail(audit )
audit_trail(audit , 3)
audit_trail <- function(a)) { #used after your analysis chain
node_labels <- ls(audit, pattern="[^node]")
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(audit[[node_labels[i]]] ))
}
}
audit_trail <- function(a) { #used after your analysis chain
node_labels <- ls(a, pattern="[^node]")
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(a[[node_labels[i]]] ))
}
}
audit_trail(audit)
audit_trail <- function(a, node) { #used after your analysis chain
node_labels <- node
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(a[[as.character(node_labels[i])]] ))
}
}
audit_trail(audit, 2)
audit_trail(audit, "2")
audit_trail <- function(a, node) { #used after your analysis chain
node_labels <- node
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(a[[  as.character(node_labels[i])   ]] ))
}
}
audit_trail(audit)
audit_trail <- function(a, node=1:length(ls(a, pattern="[^node]"))) { #used after your analysis chain
node_labels <- node
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(a[[  as.character(node_labels[i])   ]] ))
}
}
audit_trail(audit)
audit_trail(audit, 4)
audit_trail(audit, 3,4)
audit_trail <- function(a, ...) {
if (missing(...)) {
node_labels <- 1:length(ls(a, pattern="[^node]"))
} else {
node_labels <- list(...)
}
for (i in 1:length(node_labels)) {
print(paste0("audit trail: ", node_labels[i]))
print(head(a[[  as.character(node_labels[i])   ]] ))
}
}
audit_trail(audit)
audit_trail(audit, 2)
audit_trail(audit, 2,3)
audit %>% audit_trail #reveal all objects
audit %>% audit_trail(2,3)#reveal the object at the 3rd node
